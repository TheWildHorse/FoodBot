# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    App\Services\Scrapers\:
        resource: '../src/Services/Scrapers/*'
        public: true

    App\Services\Import\:
        resource: '../src/Services/Import/*'
        public: true

    App\Conversation\:
        resource: '../src/Conversation/*'
        calls:
            - [ setContainer, [ '@service_container' ]]
        public: true

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Security\UserProvider:
        arguments: ['@doctrine', 'App\Entity\User', {slack: slackId}]

    Goutte\Client:
        public: true
    BotMan\BotMan\BotMan:
        factory: 'App\Services\Communication\BotManFactory:getInstance'
    App\Services\GiphyService:
        public: true

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # EVENTS
    App\Event\DeliveredEventSubscriber:
      tags:
        - { name: doctrine.event_listener, event: postUpdate }
